Интернет магазин.

Товар
У товара м.б. характеристики, от которых зависит цена и те, от которых не зависят.
Характеристика выглядит примерно так: какая-нибудь гайка со разными размерами, наличие уплотнение и проч.
Чтобы все это не перемешивалось, делаю так:
Товары начинают подразделяться по уникальным идентификаторам, это может быть имя, но удобнее - артикул ~ sku

Допустим, та же гайка
Артикул 1. Гайка, размер 24, есть уплотнение : цена за 1000 штук 700 руб
Артикул 2. Гайка, размера 18, нет уплотнения, цена за 1000 штук 450 руб


СУЩНОСТИ
(id serial не указываю, это по умолчанию)

***************************
ОБЩИЕ НАСТРОЙКИ

Конфигурация {shop_config}
Поле
    1. владелец сайта
    2. фирма
    3. логотип
    4. телефон
    5. email
    ,,,,,,,,,,,,,,


***************************
СЕКЦИЯ ТОВАРЫ

Конфигурация магазина
Поле
    1. валюта text check length = 3
    2. НДС включено в цену или нет nds bool

КАТЕГОРИЯ ТОВАРОВ {product_category}
Поля
    1. Название/ заголовок : title text (text NOT NULL CHECK (length(title) <= 255) )
    (text - по этой причине: http://gray-hemp.blogspot.com/2010/03/charx-varcharx-varchar-text.html)
    2. Расширенный заголовок: longtitle text
    3. Изображение в списке image_intro
    4. Изображение полное image
    (можно было бы вынести в отдельные таблицы, но в случае с нагруженным магазином, мне нельзя увлекаться внешними ключами)
    5. Человекопонятная ссылка: slug text
    6. Краткое описание: intro text
    7. Описание: description text
    8. Текст: content text
    9. Soft Delete: is_deleted bool
    10. Опубликован ли: is_publish bool
    11. parent_id
    12. Created_at
    13. Updated_at
Индексы:
    #partial index on WHERE is_deleted = FALSE AND is_publish = TRUE  тоже надо ставить индекс
    //CREATE INDEX access_log_client_ip_ix ON access_log (client_ip)
    //WHERE NOT (client_ip > inet '192.168.100.0' AND
    //           client_ip < inet '192.168.100.255');

-----------------------------------------


ТОВАР {product}
Поля
    1. Название/ заголовок : title text
    2. Расширенный заголовок: longtitle text
    3. Изображение в списке image_intro
    4. Изображение полное image
    5. Человекопонятная ссылка: slug text
    6. Краткое описание: intro text
    7. Описание: description text
    8. Текст: content text
    9. Soft Delete: is_deleted bool
    10. Опубликован ли: is_publish bool
    11. Статус
    12. vendor_id (производитель)
    13. product_category_id
    14. Особый special bool
    15. Новинка novelty bool
    16. Хит popular bool
    17. Created_at
    18. Updated_at
Индексы:
    #12,13 обычные
    (далее обычные я здесь упоминать не буду, идея в том, что на каждую связь по внешнему ключу я ставлю индекс
     также я ставлю индекс на unique ~ впрочем, в постгрес, он и так на него автоматически ставится)
    #partial on WHERE is_deleted = FALSE AND is_publish = TRUE
------------------------

СТАТУС ТОВАРА Справочник {product_status}
    1. Статус status text
    (в наличии, продан, ожидается)

---------------

АРТИКУЛ {sku}
Поля
    1. sku
    2. product_id
    3. price
    4. old_price
Индексы
    # sku unique
(сюда поставить 2 constraint на
1.CHECK sku.price + case product.is_publish = TRUE >= 0
2. такой же на sku.old_price check isnotnull then >=0
)

-------------------
ХАРАКТЕРИСТИКИ ТОВАРА Справочник {product_chars}
(сокращенно, а то потом будет ключ product_characteristics_values_id - как-то некомфортно)
Поля
    1. name

-----------------------

Соответствие характеристик значениям {chars_value}
(допустим product_chars.name = диаметр)
Поля
    1. value NOTNULL
    2. product_chars_id
Индекс
    UNIQUE value + product_chars_id

----------------------------------------
Кросс таблица артикул + соответствие характеристики/значение {sku2chars_value}
Поля
    1. sku_id
    2. chars_value_id
Индекс
    UNIQUE sku_id + chars_value_id

***********************************
СЕКЦИЯ СКИДКИ

ТИП СКИДКИ Справочник {discount_type}
Поля
    1. name
(допустим, пока что пусть будут 2 штуки - просто отнимается цена и скидка в процентах)
-------------------------------------

СКИДКА {discount}
Поля
    1. name (пусть она как-то называется)
    2. discount_type_id
    3. Значение value
    4. Дата и время начала discount_start timestamp without timezone
    5. Дата и время окончания discount_end timestamp without timezone
Constraints
    1. Если discount_type_id процентный, то не более 100%
    2. значение больше 0
Индексы
    индекс на выражение, когда берем из timestamp дату - обычно скидка по дате
    если скидка типа до 19.00 23 мая, то на выражение, которое будет преобразовывать в этот формат


*************************************
СЕКЦИЯ СТАТЬИ
** так как на любом сайте есть статьи, то и для них нужно что-то сделать

КАТЕГОРИЯ СТАТЕЙ {article_category}
Поля
    1. Название/ заголовок : title text (text NOT NULL CHECK (length(title) <= 255) )
    (text - по этой причине: http://gray-hemp.blogspot.com/2010/03/charx-varcharx-varchar-text.html)
    2. Расширенный заголовок: longtitle text
    3. Изображение в списке image_intro
    4. Изображение полное image
    (можно было бы вынести в отдельные таблицы, но в случае с нагруженным магазином, мне нельзя увлекаться внешними ключами)
    5. Человекопонятная ссылка: slug text
    6. Краткое описание: intro text
    7. Описание: description text
    8. Текст: content text
    9. Soft Delete: is_deleted bool
    10. Опубликован ли: is_publish bool
    10. Created_at
    11. Updated_at
Ключи
    12. Родительская Категория или null
Индексы:
    #1 Primary key, serial
    #12 обычный
    #partial on WHERE is_deleted = FALSE AND is_publish = TRUE то тоже надо ставить индекс

-----------------------------------------

СТАТЬЯ {article}
(автора у статьи не будет)
Поля
    1. Название/ заголовок : title text
    2. Расширенный заголовок: longtitle text
    3. Изображение в списке image_intro
    4. Изображение полное image
    5. Человекопонятная ссылка: slug text
    6. Краткое описание: intro text
    7. Описание: description text
    8. Текст: content text
    9. Soft Delete: is_deleted bool
    10. Опубликован ли: is_publish bool
    10. Created_at
    11. Updated_at
Ключи
    13. Категория статей (родительский ресурс)

Индексы:
    #1 Primary key, serial
    #12,13 обычные
    #partial on WHERE is_deleted = FALSE AND is_publish = TRUE

****************************************************

СЕКЦИЯ ЛОГИСТИКА ( ПРОИЗВОДИТЕЛЬ / ПОСТАВЩИК / СКЛАД / ДОСТАВКА )

ПРОИЗВОДИТЕЛЬ. Справочник {vendor}
Поля
    1. Страна country text
    2. Сайт page text
    3. email email text
    4. Телефон text
    5. Логотип text (image_path)

ДОСТАВКА Справочник {delivery}
Поля
    1. Название name text
    2. Описание description
    3. Стоимость вес за единицу weight_price money
    4. Стоимость расстояние за единицу distance_price money
    5. Активна или нет is_active bool

------------------

СКЛАД Справочник {storehouse}
Поля
    1. Название name text
    2. Телефон phone text
    3. email text
    4. Страна country text
    5. Индекс zip text
    6. Регион region text
    7. Город city text
    8. Метро metro text
    9. Улица street text
    10. Строение building text
    11. Офис/комната/помещение room text
    12. Активен ли is_active bool
    13. Валюта, которой ведется расчет со складом currency
CONSTRAINT
    currency check length = 3
--------------------
НАЛИЧИЕ НА СКЛАДЕ {storehouse_available}
Поля
    1. storehouse_id
    2. sku_id
    2. В наличии available int
    3. Зарезервировано reserve int
    (допустим, логика резервирования такая:
    клиент ввел данные щелкает в корзине на оформить заказ - и товар резервируется по принципу, первый пришел, первый взял
    вообще, идеально было бы, чтобы товар резервировался сразу после того, как клиент его просто добавил в корзину,
    но, мне кажется, есть опасность, что конкуренты могут сделать большую гадость при такой логике
    )
CONSTRAINT
    reserve <= available

*****************************************
СЕКЦИЯ ЗАКАЗЫ
# заказ это один ко многим order ~ customer - т.к. у одного клиента может быть много заказов
# заказ это набор артикулов + количество на каждый артикул - many-to-many
# обработка заказа (оплачен, менеджер и так далее)
# адреса заказа и клиента различается могут различаться (или нет)

                    адрес \
оплата  \                   заказ -> customer
доставка -> сопровождение /
менеджер /

ЗАКАЗ {order}
# заказ я привязываю к пользователю, а менеджера я тогда привяжу к сопровождению
Поля
    1. customer_id
    2. Комментарий к заказу comment text
    (сюда попадет, допустим, если курьер - день, время или что-нибудь еще)
    3. delivery_id
    4. Вес (общий) weght (кг) decimal(10, 4)
    5. Расстояние км int unsigned
    6. order_address_id
    7. Сумма (по корзине, без учета доставки) cart_cost money
    8. Сумма доставки delivery_cost money
    9. Сумма общая cost money
    10. Created_at
    11. Updated_at
(я думал вынести п 3-6 в отдельную таблицу order_attributes, но потом не понял, какой в этом смысл)
----------------------------

ЗАКАЗ К АРТИКУЛУ И КОЛИЧЕСТВО {order2product}
# артикул - SKU number - stock keeping unit number
Поля
    1. sku_id
    2. количество quantity integer unsigned
    3. order_id
----------------------------------------

АДРЕС ЗАКАЗА {order_address}
Поля
    1. Телефон phone text
    2. email text
    3. Страна country text
    4. Индекс zip text
    5. Регион region text
    6. Город city text
    7. Метро metro text
    8. Улица street text
    9. Строение building text
    10. Офис/комната/помещение room text
    11. order_id
    12. Created_at
    13. Updated_at

--------------
СОПРОВОЖДЕНИЕ ЗАКАЗА {order_processing}
Поля
    1. order_id
    2. payment_id
    3. user_id (ссылка на user_id с правами manager)
    4. status_id
    5. чек check (если статус не оплачен - null)
    6. Комментарий comment text
    ~ юрик / физик, нужно предоставить такой-то пакет документов и проч

-------------

СТАТУС ЗАКАЗА Справочник {order_status}
    1. Статус text
    (новый, согласован, согласован и оплачен, комплектуется, скоплектован, передан на доставку, выполнен, возврат)
-------------

Платежные системы Справочник {payment}
(сюда же оплата курьеру на руки, при самовывозе)
Поле
    1. name
    2. description
    3. currency
    4. is_active bool
    5. кастомные свойства options jsonb
    6. логин
    8  комиссия fee
    9. ИНН inn
    10. комментарий text

*****************************
Пользователи
2 типа пользователей
1. на стороне магазина/сайта - стандартные роли admin, manager, content
2. customer м.б. физик или юрик
в принципе, можно понаследовать от общей таблицы user, но не выльется ли мне это потом

КЛИЕНТ {customer}
Поля
    1. Фамилия surname
    2. Имя name
    3. Отчество patronymic
    4. login
    5. email
    6. password
    4. является физиком или юриком - это enum, но в разработке с ним проблемы, что что 0 и 1 smallint
    5. customer_address_id
    ... тут еще могут быть токены, но я их опущу

Юрлицо
Поля
т.к. там огромные числа, поставлю на все text
    1. ИНН inn
    2. КПП kpp
    3. ОГРН ogrn
    4. Р/с rs
    5. Банк bank
    6. город (банка) city
    7. К/с ks
    8. БИК bik
    9. customer_id
    10. legal_address_id
    11. defacto_address_id
    12. Created_at
    13. Updated_at
    (10,11 ссылаются на customer_address для юрлиц.
         customer_address_id я не принимаю за фактический адрес, чтобы не было путаницы)

------------------------------
АДРЕС КЛИЕНТА {customer_address}
Поля
    1. Телефон phone text
    3. Страна country text
    4. Индекс zip text
    5. Регион region text
    6. Город city text
    7. Метро metro text
    8. Улица street text
    9. Строение building text
    10. Офис/комната/помещение room text
    11. Created_at
    12. Updated_at

--------------------------------
Пользователи на стороне сайта ~ admin, manager, content etc
Да, дублирование, но я не хочу мешать аккаунты клиентов и разработчиков / менеджеров


Пользователь {user}
Поля
    1. Фамилия surname text
    2. Имя name text
    3. Отчество patronymic text
    4. login text
    5. email text
    6. password text
    4. roles (там в формате a:0:{} , поэтому здесь не будет доп. связей) text
    5. user_address_id
    ... тут еще могут быть токены, но я их опущу

------------------------------

АДРЕС Пользователя (на стороне сайта) {user_address}
Поля
    1. Телефон phone text
    3. Страна country text
    4. Индекс zip text
    5. Регион region text
    6. Город city text
    7. Метро metro text
    8. Улица street text
    9. Строение building text
    10. Офис/комната/помещение room text
    11. Created_at
    12. Updated_at
**************************************************************
СЕКЦИЯ ДОПОЛНИТЕЛЬНЫЕ ПОЛЯ
(сюда можно мета-данные, галерея и проч)

Дополнительные поля {field}
Поля
    1. name
    2. Тип type_id
    (может быть text, галерея, jsonb (например, для метаданных), числовой, денежный etc)
    3. product_id
------------------------------------------------
Тип дополнительных полей. Справочник {field_type}
Поля
    1. name
-----------------------------------------------
И далее, тут типы дополнительных полей, я их не буду все перечислять, возьму json_b для, к примеру, метаданных и числовое
{field_type_jsonb}
Поле
    1. данные data jsonb
    2. field_id
{field_type_int}    рейтинг, к примеру
Поле
    1. данные data int
    2. field_id


